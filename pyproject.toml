[build-system]
requires = [
    "setuptools >= 61",
    "wheel >= 0.29.0",
    "setuptools_scm[toml] >= 3.4"
]
build-backend = "setuptools.build_meta"

[project]
name = "asphalt-exceptions"
description = "Exception reporter component for the Asphalt framework"
readme = "README.rst"
authors = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
license = {text = "Apache License 2.0"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "asphalt ~= 4.6",
    "typeguard ~= 2.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/asphalt-framework/asphalt-exceptions"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]
doc = [
    "Sphinx >= 1.5",
    "sphinx_rtd_theme",
    "sphinx-autodoc-typehints >= 1.2.0",
    "sphinxcontrib-asyncio >= 0.2.0",
]
sentry = ["sentry-sdk >= 1.5"]
raygun = ["raygun4py >= 4.3"]

[project.entry-points."asphalt.components"]
exceptions = "asphalt.exceptions.component:ExceptionReporterComponent"

[project.entry-points."asphalt.exceptions.reporters"]
sentry = "asphalt.exceptions.reporters.sentry:SentryExceptionReporter"
raygun = "asphalt.exceptions.reporters.raygun:RaygunExceptionReporter"

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.isort]
src_paths = ["src"]
skip_gitignore = true
profile = "black"

[tool.flake8]
max-line-length = 99

[tool.pytest.ini_options]
addopts = "-rsx --tb=short"
asyncio_mode = "strict"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.7"
ignore_missing_imports = true

[tool.coverage.run]
source = ["asphalt.exceptions"]
relative_files = true
branch = true

[tool.coverage.report]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311, pypy3
skip_missing_interpreters = true
isolated_build = true

[testenv]
extras = test
    sentry
    raygun
commands = python -m pytest {posargs}

[testenv:docs]
extras = doc
    sentry
    raygun
commands = sphinx-build docs build/sphinx
"""
